---
title: "R Practice Functions"
format: html
editor: visual
---

```{r}
library(rvest)
library(readr)
library(dplyr)
library(janitor)

```

```{r}
webpage <- rvest::read_html("https://www.pwrc.usgs.gov/BBL/Bander_Portal/login/speclist.php")

tbls <- rvest::html_nodes(webpage, "table") %>% 
    rvest::html_table(fill = TRUE)

species <- tbls[[1]] %>% 
    janitor::clean_names() %>% 
    select(alpha_code, common_name) %>% 
    mutate(alpha_code = tolower(alpha_code))

head(species, 3)
```

## Read in predator data

```{r}
nest_data <- read_csv("data/Utqiagvik_nest_data.csv")

predator_survey <- read_csv("data/Utqiagvik_predator_surveys.csv")

egg_measures <- read_csv("data/Utqiagvik_egg_measurements.csv")
```

```{r}
summary(nest_data)

unique(predator_survey$species)

colnames(egg_measures)
```

## translate species code into common name

```{r}
comm_names_pred <- left_join(predator_survey, species,
                             by = c("species" = "alpha_code"))

```

## functions to add species common name to any data frame

```{r}
species_name <- function(df, species) {
  return_df <- left_join(df, species, 
    by = c("species" = "alpha_code"))
  return(return_df)
}

```

## document function inserting Roxygen skeleton and adding description

```{r}
#' Functions to add species common name to any data frame
#' 
#' @param df data frame contains species codes in column `species`
#' @param species data frame defines species codes with columns entitled `alpha_code` and `common_name` 
#'
#' @return data frame with original data df + common name of species
#' @export
#'
#' @examples `*provide an example*`
species_name <- function(df, species) {
  return_df <- left_join(df, species, 
    by = c("species" = "alpha_code"))
  return(return_df)
}

```

## use function to clean names of each data frame

```{r}
pred_clean <- species_name(predator_survey, species) %>% 
    select(year, site, date, common_name, count) %>% 
    filter(!is.na(common_name))

nest_data_clean <- species_name(nest_data, species) %>% 
    select(year, site, nestID, common_name, lat_corrected, long_corrected) %>% 
    filter(!is.na(common_name))

eggs_clean <- species_name(egg_measures, species) %>% 
    select(year, site, nestID, common_name, length, width) %>% 
    filter(!is.na(common_name))
```
